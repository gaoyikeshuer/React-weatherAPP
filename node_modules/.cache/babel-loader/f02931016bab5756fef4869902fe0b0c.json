{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction composeRefs() {\n  var refs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    refs[_i] = arguments[_i];\n  }\n\n  if (refs.length === 2) {\n    // micro-optimize the hot path\n    return composeTwoRefs(refs[0], refs[1]) || null;\n  }\n\n  var composedRef = refs.slice(1).reduce(function (semiCombinedRef, refToInclude) {\n    return composeTwoRefs(semiCombinedRef, refToInclude);\n  }, refs[0]);\n  return composedRef || null;\n}\n\nexports.default = composeRefs;\nvar composedRefCache = new WeakMap();\n\nfunction composeTwoRefs(ref1, ref2) {\n  if (ref1 && ref2) {\n    var ref1Cache = composedRefCache.get(ref1) || new WeakMap();\n    composedRefCache.set(ref1, ref1Cache);\n\n    var composedRef = ref1Cache.get(ref2) || function (instance) {\n      updateRef(ref1, instance);\n      updateRef(ref2, instance);\n    };\n\n    ref1Cache.set(ref2, composedRef);\n    return composedRef;\n  }\n\n  if (!ref1) {\n    return ref2;\n  } else {\n    return ref1;\n  }\n}\n\nfunction updateRef(ref, instance) {\n  if (typeof ref === 'function') {\n    ref(instance);\n  } else {\n    ref.current = instance;\n  }\n}","map":{"version":3,"mappings":";;;;;;AAIA,SAAwBA,WAAxB,GAAmC;EAAI;;OAAA,yCAAmE;IAAnEC;;;EACrC,IAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;IAAE;IACvB,OAAOC,cAAc,CAACF,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAd,IAAoC,IAA3C;EACD;;EAED,IAAMG,WAAW,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcC,MAAd,CAClB,UAACC,eAAD,EAAkCC,YAAlC,EAA8D;IAAK,qBAAc,CAACD,eAAD,EAAkBC,YAAlB,CAAd;EAA6C,CAD9F,EAElBP,IAAI,CAAC,CAAD,CAFc,CAApB;EAIA,OAAOG,WAAW,IAAI,IAAtB;AACD;;AAVDK;AAaA,IAAMC,gBAAgB,GAAG,IAAIC,OAAJ,EAAzB;;AAEA,SAASR,cAAT,CAA2BS,IAA3B,EAAiDC,IAAjD,EAAqE;EACnE,IAAID,IAAI,IAAIC,IAAZ,EAAkB;IAChB,IAAMC,SAAS,GAAGJ,gBAAgB,CAACK,GAAjB,CAAqBH,IAArB,KAA8B,IAAID,OAAJ,EAAhD;IACAD,gBAAgB,CAACM,GAAjB,CAAqBJ,IAArB,EAA2BE,SAA3B;;IAEA,IAAMV,WAAW,GAAGU,SAAS,CAACC,GAAV,CAAcF,IAAd,KAAwB,UAACI,QAAD,EAAY;MACtDC,SAAS,CAACN,IAAD,EAAOK,QAAP,CAAT;MACAC,SAAS,CAACL,IAAD,EAAOI,QAAP,CAAT;IACD,CAHD;;IAIAH,SAAS,CAACE,GAAV,CAAcH,IAAd,EAAoBT,WAApB;IAEA,OAAOA,WAAP;EACD;;EAED,IAAI,CAACQ,IAAL,EAAW;IACT,OAAOC,IAAP;EACD,CAFD,MAEO;IACL,OAAOD,IAAP;EACD;AACF;;AAED,SAASM,SAAT,CAAsBC,GAAtB,EAA0CF,QAA1C,EAA4D;EAC1D,IAAI,OAAOE,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAACF,QAAD,CAAH;EACD,CAFD,MAEO;IACJE,GAAkC,CAACC,OAAnC,GAA6CH,QAA7C;EACF;AACF","names":["composeRefs","refs","length","composeTwoRefs","composedRef","slice","reduce","semiCombinedRef","refToInclude","exports","composedRefCache","WeakMap","ref1","ref2","ref1Cache","get","set","instance","updateRef","ref","current"],"sources":["/Users/mac/node_modules/@seznam/compose-react-refs/composeRefs.ts"],"sourcesContent":["import {MutableRefObject, Ref} from 'react'\n\ntype OptionalRef<T> = Ref<T> | undefined\n\nexport default function composeRefs<T>(...refs: [OptionalRef<T>, OptionalRef<T>, ...Array<OptionalRef<T>>]): Ref<T> {\n  if (refs.length === 2) { // micro-optimize the hot path\n    return composeTwoRefs(refs[0], refs[1]) || null\n  }\n\n  const composedRef = refs.slice(1).reduce(\n    (semiCombinedRef: OptionalRef<T>, refToInclude: OptionalRef<T>) => composeTwoRefs(semiCombinedRef, refToInclude),\n    refs[0],\n  )\n  return composedRef || null\n}\n\ntype NonNullRef<T> = NonNullable<Ref<T>>\nconst composedRefCache = new WeakMap<NonNullRef<unknown>, WeakMap<NonNullRef<unknown>, NonNullRef<unknown>>>()\n\nfunction composeTwoRefs<T>(ref1: OptionalRef<T>, ref2: OptionalRef<T>): OptionalRef<T> {\n  if (ref1 && ref2) {\n    const ref1Cache = composedRefCache.get(ref1) || new WeakMap<NonNullRef<unknown>, NonNullRef<unknown>>()\n    composedRefCache.set(ref1, ref1Cache)\n\n    const composedRef = ref1Cache.get(ref2) || ((instance: T): void => {\n      updateRef(ref1, instance)\n      updateRef(ref2, instance)\n    })\n    ref1Cache.set(ref2, composedRef)\n\n    return composedRef as NonNullRef<T>\n  }\n\n  if (!ref1) {\n    return ref2\n  } else {\n    return ref1\n  }\n}\n\nfunction updateRef<T>(ref: NonNullRef<T>, instance: null | T): void {\n  if (typeof ref === 'function') {\n    ref(instance)\n  } else {\n    (ref as MutableRefObject<T | null>).current = instance\n  }\n}\n"]},"metadata":{},"sourceType":"script"}